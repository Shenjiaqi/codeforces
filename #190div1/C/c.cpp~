#include <cstdio>
#include <iostream>
#include <algorithm>
#include <queue>
using namespace std;
#define N 100007
int p[N*2+1][2],poi;
int s[N+1];
int val[N+1];
int ans[N+1];
int du[N+1];
bool out[N+1];
void add(int f,int t)
{
  ++poi;
  p[poi][0]=t,p[poi][1]=s[f],s[f]=poi;
}
int main()
{
  freopen("in.txt","r",stdin);
  int n;
  scanf("%d",&n);
  for(int i=1;i<n;++i)
    {
      int f,t;
      scanf("%d%d",&f,&t);
      add(f,t);
      add(t,f);
      ++du[f],++du[t];
    }
  queue<int> que;
  for(int i=1;i<=n;++i)
    if(du[i]==1)
      que.push(i);
  int cnt(0);
  for(;!que.empty();)
    {
      int v=que.front();
      out[v]=1;
      que.pop();
      for(int i=s[v];i;i=p[i][1])
	{
	  int t=p[i][0];
	  if(out[t])
	    val[v]|=val[t];
	}
      for(int i=25;i>=0;--i)
	if(vv[i]>1)
	  {
	    ans[v]=i+1;
	    break;
	  }
      for(;ans[v]<26 && vvv[ans[v]];)
	++ans[v];
      val[v]|=(1<<ans[v]);
      if(ans[v]>25)
	{
	  cout<<"Impossible";
	  return 0;
	}
      else if(ans[v]==25)
	if(++cnt>1)
	  {
	    cout<<"Impossible";
	    return 0;
	  }
      for(int i=0,j=1;i<ans[v];++i,j<<=1)
	if(j&val[v])
	  val[v]^=j;
      int c=val[v];
      for(int i=s[v];i;i=p[i][1])
	{
	  int t=p[i][0];
	  if(out[t]==false)
	    {
	      if(--du[t]==1)
		que.push(t);
	    }
	}
    }
  for(int i=1;i<=n;++i)
    cout<<(char)('A'+25-ans[i])<<' ';
  return 0;
}
