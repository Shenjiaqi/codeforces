#include <algorithm>
#include <string>
#include <vector>
#include <cmath>
#include <map>
#include <fstream>
#include <cassert>
#include <set>
#include <queue>
#include <iostream>
#include <utility>
#include <stack>
#include <complex>
#include <string.h>
#include <stdlib.h>
#include <stdio.h>
#include <list>
#include <functional>
#include <cctype>
using namespace std;
typedef long double ld;
typedef long long ll;
typedef pair<int,int> ppi;
typedef pair<ll,ll> ppl;
typedef pair<double,double> ppd;
#define PB push_back
#define MP make_pair
#define FIR first
#define SEC second
#define FOR(a,b,c) for(int a=(b);a<(c);++a)
#define FR(a,b) for(typeof(b.begin()) a=b.begin();a!=b.end();++a)
const int N = 1e6 + 7;
int p[N];
int main()
{
  int n, m;
  scanf("%d%d", &n, &m);
  for( int i = 0; i < n; ++i )
    scanf("%d", p + i);
  sort( p, p + n );
  int minAbs = 1e9;
  int pos = 0;
  for( int i = 0, j = 1e9; i < n ; i += m)
    {
      int left = i;
      int right = n - 1 - left;
      left = ( left + m - 1) / m;
      right = ( right + m - 1 ) / m;
      int tmp = abs( left - right );
      if( tmp < j )
	{
	  j = tmp;
	  pos = i;
	}
    }
  ll ans(0);
  for( int i = pos - 1; i >= 0; i -= m)
    ans += abs( p[ max( 0, i - m + 1) ] - pos );
  for( int i = pos + 1; i < n; i += m)
    ans += abs( p[ min( n - 1, i + m - 1 ) ] - pos );
  cout << ans << endl;
  return 0;
}
